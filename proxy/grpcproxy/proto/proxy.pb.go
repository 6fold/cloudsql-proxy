// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/proxy.proto

package grpcproxy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HandshakeResponseCode int32

const (
	HandshakeResponseCode_SUCCESS                HandshakeResponseCode = 0
	HandshakeResponseCode_AUTHENTICATION_FAILURE HandshakeResponseCode = 1
	HandshakeResponseCode_AUTHORIZATION_FAILURE  HandshakeResponseCode = 2
	HandshakeResponseCode_MALFORMED_REQUEST      HandshakeResponseCode = 3
	HandshakeResponseCode_SERVER_ERROR           HandshakeResponseCode = 4
)

var HandshakeResponseCode_name = map[int32]string{
	0: "SUCCESS",
	1: "AUTHENTICATION_FAILURE",
	2: "AUTHORIZATION_FAILURE",
	3: "MALFORMED_REQUEST",
	4: "SERVER_ERROR",
}
var HandshakeResponseCode_value = map[string]int32{
	"SUCCESS":                0,
	"AUTHENTICATION_FAILURE": 1,
	"AUTHORIZATION_FAILURE":  2,
	"MALFORMED_REQUEST":      3,
	"SERVER_ERROR":           4,
}

func (x HandshakeResponseCode) String() string {
	return proto.EnumName(HandshakeResponseCode_name, int32(x))
}
func (HandshakeResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_proxy_c21480256412244d, []int{0}
}

type ClientSQLMessage struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientSQLMessage) Reset()         { *m = ClientSQLMessage{} }
func (m *ClientSQLMessage) String() string { return proto.CompactTextString(m) }
func (*ClientSQLMessage) ProtoMessage()    {}
func (*ClientSQLMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_c21480256412244d, []int{0}
}
func (m *ClientSQLMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientSQLMessage.Unmarshal(m, b)
}
func (m *ClientSQLMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientSQLMessage.Marshal(b, m, deterministic)
}
func (dst *ClientSQLMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientSQLMessage.Merge(dst, src)
}
func (m *ClientSQLMessage) XXX_Size() int {
	return xxx_messageInfo_ClientSQLMessage.Size(m)
}
func (m *ClientSQLMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientSQLMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientSQLMessage proto.InternalMessageInfo

func (m *ClientSQLMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DatabaseMessage struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseMessage) Reset()         { *m = DatabaseMessage{} }
func (m *DatabaseMessage) String() string { return proto.CompactTextString(m) }
func (*DatabaseMessage) ProtoMessage()    {}
func (*DatabaseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_c21480256412244d, []int{1}
}
func (m *DatabaseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseMessage.Unmarshal(m, b)
}
func (m *DatabaseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseMessage.Marshal(b, m, deterministic)
}
func (dst *DatabaseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseMessage.Merge(dst, src)
}
func (m *DatabaseMessage) XXX_Size() int {
	return xxx_messageInfo_DatabaseMessage.Size(m)
}
func (m *DatabaseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseMessage proto.InternalMessageInfo

func (m *DatabaseMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type HandshakeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeRequest) Reset()         { *m = HandshakeRequest{} }
func (m *HandshakeRequest) String() string { return proto.CompactTextString(m) }
func (*HandshakeRequest) ProtoMessage()    {}
func (*HandshakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_c21480256412244d, []int{2}
}
func (m *HandshakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeRequest.Unmarshal(m, b)
}
func (m *HandshakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeRequest.Marshal(b, m, deterministic)
}
func (dst *HandshakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeRequest.Merge(dst, src)
}
func (m *HandshakeRequest) XXX_Size() int {
	return xxx_messageInfo_HandshakeRequest.Size(m)
}
func (m *HandshakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeRequest proto.InternalMessageInfo

type HandshakeResponse struct {
	Status               HandshakeResponseCode `protobuf:"varint,1,opt,name=status,proto3,enum=grpcproxy.HandshakeResponseCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HandshakeResponse) Reset()         { *m = HandshakeResponse{} }
func (m *HandshakeResponse) String() string { return proto.CompactTextString(m) }
func (*HandshakeResponse) ProtoMessage()    {}
func (*HandshakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_c21480256412244d, []int{3}
}
func (m *HandshakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeResponse.Unmarshal(m, b)
}
func (m *HandshakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeResponse.Marshal(b, m, deterministic)
}
func (dst *HandshakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeResponse.Merge(dst, src)
}
func (m *HandshakeResponse) XXX_Size() int {
	return xxx_messageInfo_HandshakeResponse.Size(m)
}
func (m *HandshakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeResponse proto.InternalMessageInfo

func (m *HandshakeResponse) GetStatus() HandshakeResponseCode {
	if m != nil {
		return m.Status
	}
	return HandshakeResponseCode_SUCCESS
}

func init() {
	proto.RegisterType((*ClientSQLMessage)(nil), "grpcproxy.ClientSQLMessage")
	proto.RegisterType((*DatabaseMessage)(nil), "grpcproxy.DatabaseMessage")
	proto.RegisterType((*HandshakeRequest)(nil), "grpcproxy.HandshakeRequest")
	proto.RegisterType((*HandshakeResponse)(nil), "grpcproxy.HandshakeResponse")
	proto.RegisterEnum("grpcproxy.HandshakeResponseCode", HandshakeResponseCode_name, HandshakeResponseCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SQLProxyClient is the client API for SQLProxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SQLProxyClient interface {
	ProxyConnection(ctx context.Context, opts ...grpc.CallOption) (SQLProxy_ProxyConnectionClient, error)
	Handshake(ctx context.Context, in *HandshakeRequest, opts ...grpc.CallOption) (*HandshakeResponse, error)
}

type sQLProxyClient struct {
	cc *grpc.ClientConn
}

func NewSQLProxyClient(cc *grpc.ClientConn) SQLProxyClient {
	return &sQLProxyClient{cc}
}

func (c *sQLProxyClient) ProxyConnection(ctx context.Context, opts ...grpc.CallOption) (SQLProxy_ProxyConnectionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SQLProxy_serviceDesc.Streams[0], "/grpcproxy.SQLProxy/ProxyConnection", opts...)
	if err != nil {
		return nil, err
	}
	x := &sQLProxyProxyConnectionClient{stream}
	return x, nil
}

type SQLProxy_ProxyConnectionClient interface {
	Send(*ClientSQLMessage) error
	Recv() (*DatabaseMessage, error)
	grpc.ClientStream
}

type sQLProxyProxyConnectionClient struct {
	grpc.ClientStream
}

func (x *sQLProxyProxyConnectionClient) Send(m *ClientSQLMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sQLProxyProxyConnectionClient) Recv() (*DatabaseMessage, error) {
	m := new(DatabaseMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sQLProxyClient) Handshake(ctx context.Context, in *HandshakeRequest, opts ...grpc.CallOption) (*HandshakeResponse, error) {
	out := new(HandshakeResponse)
	err := c.cc.Invoke(ctx, "/grpcproxy.SQLProxy/Handshake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SQLProxyServer is the server API for SQLProxy service.
type SQLProxyServer interface {
	ProxyConnection(SQLProxy_ProxyConnectionServer) error
	Handshake(context.Context, *HandshakeRequest) (*HandshakeResponse, error)
}

func RegisterSQLProxyServer(s *grpc.Server, srv SQLProxyServer) {
	s.RegisterService(&_SQLProxy_serviceDesc, srv)
}

func _SQLProxy_ProxyConnection_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SQLProxyServer).ProxyConnection(&sQLProxyProxyConnectionServer{stream})
}

type SQLProxy_ProxyConnectionServer interface {
	Send(*DatabaseMessage) error
	Recv() (*ClientSQLMessage, error)
	grpc.ServerStream
}

type sQLProxyProxyConnectionServer struct {
	grpc.ServerStream
}

func (x *sQLProxyProxyConnectionServer) Send(m *DatabaseMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sQLProxyProxyConnectionServer) Recv() (*ClientSQLMessage, error) {
	m := new(ClientSQLMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SQLProxy_Handshake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandshakeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SQLProxyServer).Handshake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproxy.SQLProxy/Handshake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SQLProxyServer).Handshake(ctx, req.(*HandshakeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SQLProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproxy.SQLProxy",
	HandlerType: (*SQLProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handshake",
			Handler:    _SQLProxy_Handshake_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ProxyConnection",
			Handler:       _SQLProxy_ProxyConnection_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/proxy.proto",
}

func init() { proto.RegisterFile("proto/proxy.proto", fileDescriptor_proxy_c21480256412244d) }

var fileDescriptor_proxy_c21480256412244d = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4b, 0x02, 0x41,
	0x14, 0xc6, 0xdd, 0x12, 0xcb, 0x97, 0xe4, 0xf8, 0xc0, 0xa8, 0xad, 0x83, 0x2c, 0x14, 0xd2, 0xc1,
	0xc2, 0x2e, 0x5d, 0x97, 0x75, 0xc4, 0x85, 0x5d, 0x57, 0x67, 0x76, 0x3b, 0x74, 0x91, 0x51, 0x07,
	0x93, 0x62, 0x67, 0x73, 0x46, 0xa8, 0x7b, 0x7f, 0x4b, 0x7f, 0x67, 0xb8, 0x84, 0xa8, 0x85, 0xb7,
	0x8f, 0xf7, 0x7d, 0x33, 0xbc, 0xef, 0xf7, 0xa0, 0x96, 0x2d, 0x94, 0x51, 0x77, 0xd9, 0x42, 0x7d,
	0x7c, 0xb6, 0x72, 0x8d, 0xe5, 0xd9, 0x22, 0x9b, 0xe4, 0x03, 0xe7, 0x06, 0x88, 0xf7, 0x36, 0x97,
	0xa9, 0xe1, 0xc3, 0x20, 0x94, 0x5a, 0x8b, 0x99, 0x44, 0x84, 0xe2, 0x54, 0x18, 0x71, 0x6e, 0x35,
	0xac, 0x66, 0x85, 0xe5, 0xda, 0xb9, 0x86, 0x6a, 0x47, 0x18, 0x31, 0x16, 0x5a, 0xee, 0x8b, 0x21,
	0x90, 0x9e, 0x48, 0xa7, 0xfa, 0x45, 0xbc, 0x4a, 0x26, 0xdf, 0x97, 0x52, 0x1b, 0x27, 0x84, 0xda,
	0xc6, 0x4c, 0x67, 0x2a, 0xd5, 0x12, 0x1f, 0xa1, 0xa4, 0x8d, 0x30, 0x4b, 0x9d, 0x3f, 0x3f, 0x6d,
	0x37, 0x5a, 0xeb, 0x9d, 0x5a, 0x7f, 0xd2, 0x9e, 0x9a, 0x4a, 0xf6, 0x9b, 0xbf, 0xfd, 0xb2, 0xa0,
	0xfe, 0x6f, 0x02, 0x4f, 0xe0, 0x88, 0x27, 0x9e, 0x47, 0x39, 0x27, 0x05, 0xb4, 0xe1, 0xcc, 0x4d,
	0xe2, 0x1e, 0xed, 0xc7, 0xbe, 0xe7, 0xc6, 0x7e, 0xd4, 0x1f, 0x75, 0x5d, 0x3f, 0x48, 0x18, 0x25,
	0x16, 0x5e, 0x40, 0x7d, 0xe5, 0x45, 0xcc, 0x7f, 0xde, 0xb6, 0x0e, 0xb0, 0x0e, 0xb5, 0xd0, 0x0d,
	0xba, 0x11, 0x0b, 0x69, 0x67, 0xc4, 0xe8, 0x30, 0xa1, 0x3c, 0x26, 0x87, 0x48, 0xa0, 0xc2, 0x29,
	0x7b, 0xa2, 0x6c, 0x44, 0x19, 0x8b, 0x18, 0x29, 0xb6, 0xbf, 0x2d, 0x38, 0xe6, 0xc3, 0x60, 0xb0,
	0xda, 0x18, 0x07, 0x50, 0xcd, 0x85, 0xa7, 0xd2, 0x54, 0x4e, 0xcc, 0x5c, 0xa5, 0x78, 0xb9, 0x51,
	0x68, 0x97, 0xb0, 0x6d, 0x6f, 0x98, 0x3b, 0x58, 0x9d, 0x42, 0xd3, 0xba, 0xb7, 0xb0, 0x07, 0xe5,
	0x75, 0xc9, 0xad, 0xbf, 0x76, 0xf1, 0xda, 0x57, 0xfb, 0xc8, 0x39, 0x85, 0x71, 0x29, 0xbf, 0xf9,
	0xc3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x97, 0x1a, 0x2e, 0x2a, 0x08, 0x02, 0x00, 0x00,
}
